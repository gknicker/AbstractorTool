#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Web.Script.Serialization;
using Newtonsoft.Json;


[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="penatna")]
public partial class PenatnaDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAdmin(Admin instance);
  partial void UpdateAdmin(Admin instance);
  partial void DeleteAdmin(Admin instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  partial void InsertOrder(Order instance);
  partial void UpdateOrder(Order instance);
  partial void DeleteOrder(Order instance);
  partial void InsertPage(Page instance);
  partial void UpdatePage(Page instance);
  partial void DeletePage(Page instance);
  partial void InsertAbstract(Abstract instance);
  partial void UpdateAbstract(Abstract instance);
  partial void DeleteAbstract(Abstract instance);
  partial void InsertInvoice(Invoice instance);
  partial void UpdateInvoice(Invoice instance);
  partial void DeleteInvoice(Invoice instance);
  #endregion
	
	public PenatnaDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["penatna"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public PenatnaDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PenatnaDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PenatnaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PenatnaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Admin> Admins
	{
		get
		{
			return this.GetTable<Admin>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
	
	public System.Data.Linq.Table<Order> Orders
	{
		get
		{
			return this.GetTable<Order>();
		}
	}
	
	public System.Data.Linq.Table<Page> Pages
	{
		get
		{
			return this.GetTable<Page>();
		}
	}
	
	public System.Data.Linq.Table<Abstract> Abstracts
	{
		get
		{
			return this.GetTable<Abstract>();
		}
	}
	
	public System.Data.Linq.Table<Invoice> Invoices
	{
		get
		{
			return this.GetTable<Invoice>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private string _LoginName;
	
	private string _PasswordHash;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    #endregion
	
	public Admin()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string LoginName
	{
		get
		{
			return this._LoginName;
		}
		set
		{
			if ((this._LoginName != value))
			{
				this.OnLoginNameChanging(value);
				this.SendPropertyChanging();
				this._LoginName = value;
				this.SendPropertyChanged("LoginName");
				this.OnLoginNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="Char(64) NOT NULL", CanBeNull=false)]
	public string PasswordHash
	{
		get
		{
			return this._PasswordHash;
		}
		set
		{
			if ((this._PasswordHash != value))
			{
				this.OnPasswordHashChanging(value);
				this.SendPropertyChanging();
				this._PasswordHash = value;
				this.SendPropertyChanged("PasswordHash");
				this.OnPasswordHashChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private string _LoginName;
	
	private string _Password;
	
	private string _Email;
	
	private string _InvoicePrefix;
	
	private int _NextInvoiceNumber;
	
	private decimal _SearchFee;
	
	private decimal _CopyFee;
	
	private string _FirstName;
	
	private char _MiddleInitial;
	
	private string _LastName;
	
	private string _Address;
	
	private string _City;
	
	private string _StateAbbr;
	
	private decimal _Zip;
	
	private System.Nullable<decimal> _ZipPlus4;
	
	private string _Phone;
	
	private System.DateTime _DateCreated;
	
	private System.DateTime _DateUpdated;
	
	private EntitySet<Order> _Orders;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnInvoicePrefixChanging(string value);
    partial void OnInvoicePrefixChanged();
    partial void OnNextInvoiceNumberChanging(int value);
    partial void OnNextInvoiceNumberChanged();
    partial void OnSearchFeeChanging(decimal value);
    partial void OnSearchFeeChanged();
    partial void OnCopyFeeChanging(decimal value);
    partial void OnCopyFeeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleInitialChanging(char value);
    partial void OnMiddleInitialChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateAbbrChanging(string value);
    partial void OnStateAbbrChanged();
    partial void OnZipChanging(decimal value);
    partial void OnZipChanged();
    partial void OnZipPlus4Changing(System.Nullable<decimal> value);
    partial void OnZipPlus4Changed();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.DateTime value);
    partial void OnDateUpdatedChanged();
    #endregion
	
	public User()
	{
		this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LoginName
	{
		get
		{
			return this._LoginName;
		}
		set
		{
			if ((this._LoginName != value))
			{
				this.OnLoginNameChanging(value);
				this.SendPropertyChanging();
				this._LoginName = value;
				this.SendPropertyChanged("LoginName");
				this.OnLoginNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicePrefix", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string InvoicePrefix
	{
		get
		{
			return this._InvoicePrefix;
		}
		set
		{
			if ((this._InvoicePrefix != value))
			{
				this.OnInvoicePrefixChanging(value);
				this.SendPropertyChanging();
				this._InvoicePrefix = value;
				this.SendPropertyChanged("InvoicePrefix");
				this.OnInvoicePrefixChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextInvoiceNumber", DbType="Int NOT NULL")]
	public int NextInvoiceNumber
	{
		get
		{
			return this._NextInvoiceNumber;
		}
		set
		{
			if ((this._NextInvoiceNumber != value))
			{
				this.OnNextInvoiceNumberChanging(value);
				this.SendPropertyChanging();
				this._NextInvoiceNumber = value;
				this.SendPropertyChanged("NextInvoiceNumber");
				this.OnNextInvoiceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchFee", DbType="SmallMoney NOT NULL")]
	public decimal SearchFee
	{
		get
		{
			return this._SearchFee;
		}
		set
		{
			if ((this._SearchFee != value))
			{
				this.OnSearchFeeChanging(value);
				this.SendPropertyChanging();
				this._SearchFee = value;
				this.SendPropertyChanged("SearchFee");
				this.OnSearchFeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyFee", DbType="SmallMoney NOT NULL")]
	public decimal CopyFee
	{
		get
		{
			return this._CopyFee;
		}
		set
		{
			if ((this._CopyFee != value))
			{
				this.OnCopyFeeChanging(value);
				this.SendPropertyChanging();
				this._CopyFee = value;
				this.SendPropertyChanged("CopyFee");
				this.OnCopyFeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleInitial", DbType="Char(1) NOT NULL")]
	public char MiddleInitial
	{
		get
		{
			return this._MiddleInitial;
		}
		set
		{
			if ((this._MiddleInitial != value))
			{
				this.OnMiddleInitialChanging(value);
				this.SendPropertyChanging();
				this._MiddleInitial = value;
				this.SendPropertyChanged("MiddleInitial");
				this.OnMiddleInitialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateAbbr", DbType="Char(2) NOT NULL", CanBeNull=false)]
	public string StateAbbr
	{
		get
		{
			return this._StateAbbr;
		}
		set
		{
			if ((this._StateAbbr != value))
			{
				this.OnStateAbbrChanging(value);
				this.SendPropertyChanging();
				this._StateAbbr = value;
				this.SendPropertyChanged("StateAbbr");
				this.OnStateAbbrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="Decimal(5,0) NOT NULL")]
	public decimal Zip
	{
		get
		{
			return this._Zip;
		}
		set
		{
			if ((this._Zip != value))
			{
				this.OnZipChanging(value);
				this.SendPropertyChanging();
				this._Zip = value;
				this.SendPropertyChanged("Zip");
				this.OnZipChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipPlus4", DbType="Decimal(4,0)")]
	public System.Nullable<decimal> ZipPlus4
	{
		get
		{
			return this._ZipPlus4;
		}
		set
		{
			if ((this._ZipPlus4 != value))
			{
				this.OnZipPlus4Changing(value);
				this.SendPropertyChanging();
				this._ZipPlus4 = value;
				this.SendPropertyChanged("ZipPlus4");
				this.OnZipPlus4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateUpdated
	{
		get
		{
			return this._DateUpdated;
		}
		set
		{
			if ((this._DateUpdated != value))
			{
				this.OnDateUpdatedChanging(value);
				this.SendPropertyChanging();
				this._DateUpdated = value;
				this.SendPropertyChanged("DateUpdated");
				this.OnDateUpdatedChanged();
			}
		}
	}
	
	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Orders", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<Order> Orders
	{
		get
		{
			return this._Orders;
		}
		set
		{
			this._Orders.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.User = this;
	}
	
	private void detach_Orders(Order entity)
	{
		this.SendPropertyChanging();
		entity.User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Guid _UserId;
	
	private int _CaseNumber;
	
	private int _TaskID;
	
	private System.DateTime _DateAssigned;
	
	private System.DateTime _DateImported;
	
	private System.Nullable<System.DateTime> _DateCompleted;
	
	private string _AbstractFilePath;
	
	private decimal _SearchFee;
	
	private decimal _CopyFee;
	
	private string _Name;
	
	private string _Address;
	
	private string _County;
	
	private string _State;
	
	private System.Nullable<System.DateTime> _InstrumentDate;
	
	private System.Nullable<System.DateTime> _RecordingDate;
	
	private System.Nullable<decimal> _MortgageAmount;
	
	private EntitySet<Page> _Pages;
	
	private EntitySet<Abstract> _Abstracts;
	
	private EntitySet<Invoice> _Invoices;
	
	private EntityRef<User> _User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCaseNumberChanging(int value);
    partial void OnCaseNumberChanged();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnDateAssignedChanging(System.DateTime value);
    partial void OnDateAssignedChanged();
    partial void OnDateImportedChanging(System.DateTime value);
    partial void OnDateImportedChanged();
    partial void OnDateCompletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCompletedChanged();
    partial void OnAbstractFilePathChanging(string value);
    partial void OnAbstractFilePathChanged();
    partial void OnSearchFeeChanging(decimal value);
    partial void OnSearchFeeChanged();
    partial void OnCopyFeeChanging(decimal value);
    partial void OnCopyFeeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountyChanging(string value);
    partial void OnCountyChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnInstrumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstrumentDateChanged();
    partial void OnRecordingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordingDateChanged();
    partial void OnMortgageAmountChanging(System.Nullable<decimal> value);
    partial void OnMortgageAmountChanged();
    #endregion
	
	public Order()
	{
		this._Pages = new EntitySet<Page>(new Action<Page>(this.attach_Pages), new Action<Page>(this.detach_Pages));
		this._Abstracts = new EntitySet<Abstract>(new Action<Abstract>(this.attach_Abstracts), new Action<Abstract>(this.detach_Abstracts));
		this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
		this._User = default(EntityRef<User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseNumber", DbType="Int NOT NULL")]
	public int CaseNumber
	{
		get
		{
			return this._CaseNumber;
		}
		set
		{
			if ((this._CaseNumber != value))
			{
				this.OnCaseNumberChanging(value);
				this.SendPropertyChanging();
				this._CaseNumber = value;
				this.SendPropertyChanged("CaseNumber");
				this.OnCaseNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", DbType="Int NOT NULL")]
	public int TaskID
	{
		get
		{
			return this._TaskID;
		}
		set
		{
			if ((this._TaskID != value))
			{
				this.OnTaskIDChanging(value);
				this.SendPropertyChanging();
				this._TaskID = value;
				this.SendPropertyChanged("TaskID");
				this.OnTaskIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAssigned", DbType="Date NOT NULL")]
	public System.DateTime DateAssigned
	{
		get
		{
			return this._DateAssigned;
		}
		set
		{
			if ((this._DateAssigned != value))
			{
				this.OnDateAssignedChanging(value);
				this.SendPropertyChanging();
				this._DateAssigned = value;
				this.SendPropertyChanged("DateAssigned");
				this.OnDateAssignedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateImported", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateImported
	{
		get
		{
			return this._DateImported;
		}
		set
		{
			if ((this._DateImported != value))
			{
				this.OnDateImportedChanging(value);
				this.SendPropertyChanging();
				this._DateImported = value;
				this.SendPropertyChanged("DateImported");
				this.OnDateImportedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCompleted", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> DateCompleted
	{
		get
		{
			return this._DateCompleted;
		}
		set
		{
			if ((this._DateCompleted != value))
			{
				this.OnDateCompletedChanging(value);
				this.SendPropertyChanging();
				this._DateCompleted = value;
				this.SendPropertyChanged("DateCompleted");
				this.OnDateCompletedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbstractFilePath", DbType="VarChar(400)")]
	public string AbstractFilePath
	{
		get
		{
			return this._AbstractFilePath;
		}
		set
		{
			if ((this._AbstractFilePath != value))
			{
				this.OnAbstractFilePathChanging(value);
				this.SendPropertyChanging();
				this._AbstractFilePath = value;
				this.SendPropertyChanged("AbstractFilePath");
				this.OnAbstractFilePathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchFee", DbType="SmallMoney NOT NULL")]
	public decimal SearchFee
	{
		get
		{
			return this._SearchFee;
		}
		set
		{
			if ((this._SearchFee != value))
			{
				this.OnSearchFeeChanging(value);
				this.SendPropertyChanging();
				this._SearchFee = value;
				this.SendPropertyChanged("SearchFee");
				this.OnSearchFeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyFee", DbType="SmallMoney NOT NULL")]
	public decimal CopyFee
	{
		get
		{
			return this._CopyFee;
		}
		set
		{
			if ((this._CopyFee != value))
			{
				this.OnCopyFeeChanging(value);
				this.SendPropertyChanging();
				this._CopyFee = value;
				this.SendPropertyChanged("CopyFee");
				this.OnCopyFeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_County", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string County
	{
		get
		{
			return this._County;
		}
		set
		{
			if ((this._County != value))
			{
				this.OnCountyChanging(value);
				this.SendPropertyChanging();
				this._County = value;
				this.SendPropertyChanged("County");
				this.OnCountyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2) NOT NULL", CanBeNull=false)]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstrumentDate", DbType="Date")]
	public System.Nullable<System.DateTime> InstrumentDate
	{
		get
		{
			return this._InstrumentDate;
		}
		set
		{
			if ((this._InstrumentDate != value))
			{
				this.OnInstrumentDateChanging(value);
				this.SendPropertyChanging();
				this._InstrumentDate = value;
				this.SendPropertyChanged("InstrumentDate");
				this.OnInstrumentDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordingDate", DbType="Date")]
	public System.Nullable<System.DateTime> RecordingDate
	{
		get
		{
			return this._RecordingDate;
		}
		set
		{
			if ((this._RecordingDate != value))
			{
				this.OnRecordingDateChanging(value);
				this.SendPropertyChanging();
				this._RecordingDate = value;
				this.SendPropertyChanged("RecordingDate");
				this.OnRecordingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageAmount", DbType="Money")]
	public System.Nullable<decimal> MortgageAmount
	{
		get
		{
			return this._MortgageAmount;
		}
		set
		{
			if ((this._MortgageAmount != value))
			{
				this.OnMortgageAmountChanging(value);
				this.SendPropertyChanging();
				this._MortgageAmount = value;
				this.SendPropertyChanged("MortgageAmount");
				this.OnMortgageAmountChanged();
			}
		}
	}

	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_Page", Storage = "_Pages", ThisKey = "Id", OtherKey = "OrderId")]
	public EntitySet<Page> Pages
	{
		get
		{
			return this._Pages;
		}
		set
		{
			this._Pages.Assign(value);
		}
	}

	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_Abstract", Storage = "_Abstracts", ThisKey = "Id", OtherKey = "OrderId")]
	public EntitySet<Abstract> Abstracts
	{
		get
		{
			return this._Abstracts;
		}
		set
		{
			this._Abstracts.Assign(value);
		}
	}

	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_Invoice", Storage = "_Invoices", ThisKey = "Id", OtherKey = "OrderId")]
	public EntitySet<Invoice> Invoices
	{
		get
		{
			return this._Invoices;
		}
		set
		{
			this._Invoices.Assign(value);
		}
	}

	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "User_Order", Storage = "_User", ThisKey = "UserId", OtherKey = "Id", IsForeignKey = true)]
	public User User
	{
		get
		{
			return this._User.Entity;
		}
		set
		{
			User previousValue = this._User.Entity;
			if (((previousValue != value) 
						|| (this._User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._User.Entity = null;
					previousValue.Orders.Remove(this);
				}
				this._User.Entity = value;
				if ((value != null))
				{
					value.Orders.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Pages(Page entity)
	{
		this.SendPropertyChanging();
		entity.Order = this;
	}
	
	private void detach_Pages(Page entity)
	{
		this.SendPropertyChanging();
		entity.Order = null;
	}
	
	private void attach_Abstracts(Abstract entity)
	{
		this.SendPropertyChanging();
		entity.Order = this;
	}
	
	private void detach_Abstracts(Abstract entity)
	{
		this.SendPropertyChanging();
		entity.Order = null;
	}
	
	private void attach_Invoices(Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Order = this;
	}
	
	private void detach_Invoices(Invoice entity)
	{
		this.SendPropertyChanging();
		entity.Order = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Guid _OrderId;
	
	private byte _PageNumber;
	
	private string _PageFilePath;
	
	private EntityRef<Order> _Order;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(System.Guid value);
    partial void OnOrderIdChanged();
    partial void OnPageNumberChanging(byte value);
    partial void OnPageNumberChanged();
    partial void OnPageFilePathChanging(string value);
    partial void OnPageFilePathChanged();
    #endregion
	
	public Page()
	{
		this._Order = default(EntityRef<Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid OrderId
	{
		get
		{
			return this._OrderId;
		}
		set
		{
			if ((this._OrderId != value))
			{
				if (this._Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIdChanging(value);
				this.SendPropertyChanging();
				this._OrderId = value;
				this.SendPropertyChanged("OrderId");
				this.OnOrderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNumber", DbType="TinyInt NOT NULL")]
	public byte PageNumber
	{
		get
		{
			return this._PageNumber;
		}
		set
		{
			if ((this._PageNumber != value))
			{
				this.OnPageNumberChanging(value);
				this.SendPropertyChanging();
				this._PageNumber = value;
				this.SendPropertyChanged("PageNumber");
				this.OnPageNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageFilePath", DbType="VarChar(400) NOT NULL", CanBeNull=false)]
	public string PageFilePath
	{
		get
		{
			return this._PageFilePath;
		}
		set
		{
			if ((this._PageFilePath != value))
			{
				this.OnPageFilePathChanging(value);
				this.SendPropertyChanging();
				this._PageFilePath = value;
				this.SendPropertyChanged("PageFilePath");
				this.OnPageFilePathChanged();
			}
		}
	}

	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_Page", Storage = "_Order", ThisKey = "OrderId", OtherKey = "Id", IsForeignKey = true)]
	public Order Order
	{
		get
		{
			return this._Order.Entity;
		}
		set
		{
			Order previousValue = this._Order.Entity;
			if (((previousValue != value) 
						|| (this._Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order.Entity = null;
					previousValue.Pages.Remove(this);
				}
				this._Order.Entity = value;
				if ((value != null))
				{
					value.Pages.Add(this);
					this._OrderId = value.Id;
				}
				else
				{
					this._OrderId = default(System.Guid);
				}
				this.SendPropertyChanged("Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Abstract")]
public partial class Abstract : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Guid _OrderId;
	
	private byte _PageNumber;
	
	private string _FieldLabel;
	
	private short _LabelTopPixels;
	
	private short _LabelLeftPixels;
	
	private short _LabelHeightPixels;
	
	private short _LabelWidthPixels;
	
	private short _ValueTopPixels;
	
	private short _ValueLeftPixels;
	
	private short _ValueHeightPixels;
	
	private short _ValueWidthPixels;
	
	private string _FieldValue;
	
	private System.DateTime _LastUpdated;
	
	private EntityRef<Order> _Order;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(System.Guid value);
    partial void OnOrderIdChanged();
    partial void OnPageNumberChanging(byte value);
    partial void OnPageNumberChanged();
    partial void OnFieldLabelChanging(string value);
    partial void OnFieldLabelChanged();
    partial void OnLabelTopPixelsChanging(short value);
    partial void OnLabelTopPixelsChanged();
    partial void OnLabelLeftPixelsChanging(short value);
    partial void OnLabelLeftPixelsChanged();
    partial void OnLabelHeightPixelsChanging(short value);
    partial void OnLabelHeightPixelsChanged();
    partial void OnLabelWidthPixelsChanging(short value);
    partial void OnLabelWidthPixelsChanged();
    partial void OnValueTopPixelsChanging(short value);
    partial void OnValueTopPixelsChanged();
    partial void OnValueLeftPixelsChanging(short value);
    partial void OnValueLeftPixelsChanged();
    partial void OnValueHeightPixelsChanging(short value);
    partial void OnValueHeightPixelsChanged();
    partial void OnValueWidthPixelsChanging(short value);
    partial void OnValueWidthPixelsChanged();
    partial void OnFieldValueChanging(string value);
    partial void OnFieldValueChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    #endregion
	
	public Abstract()
	{
		this._Order = default(EntityRef<Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid OrderId
	{
		get
		{
			return this._OrderId;
		}
		set
		{
			if ((this._OrderId != value))
			{
				if (this._Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIdChanging(value);
				this.SendPropertyChanging();
				this._OrderId = value;
				this.SendPropertyChanged("OrderId");
				this.OnOrderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageNumber", DbType="TinyInt NOT NULL")]
	public byte PageNumber
	{
		get
		{
			return this._PageNumber;
		}
		set
		{
			if ((this._PageNumber != value))
			{
				this.OnPageNumberChanging(value);
				this.SendPropertyChanging();
				this._PageNumber = value;
				this.SendPropertyChanged("PageNumber");
				this.OnPageNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldLabel", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string FieldLabel
	{
		get
		{
			return this._FieldLabel;
		}
		set
		{
			if ((this._FieldLabel != value))
			{
				this.OnFieldLabelChanging(value);
				this.SendPropertyChanging();
				this._FieldLabel = value;
				this.SendPropertyChanged("FieldLabel");
				this.OnFieldLabelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelTopPixels", DbType="SmallInt NOT NULL")]
	public short LabelTopPixels
	{
		get
		{
			return this._LabelTopPixels;
		}
		set
		{
			if ((this._LabelTopPixels != value))
			{
				this.OnLabelTopPixelsChanging(value);
				this.SendPropertyChanging();
				this._LabelTopPixels = value;
				this.SendPropertyChanged("LabelTopPixels");
				this.OnLabelTopPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelLeftPixels", DbType="SmallInt NOT NULL")]
	public short LabelLeftPixels
	{
		get
		{
			return this._LabelLeftPixels;
		}
		set
		{
			if ((this._LabelLeftPixels != value))
			{
				this.OnLabelLeftPixelsChanging(value);
				this.SendPropertyChanging();
				this._LabelLeftPixels = value;
				this.SendPropertyChanged("LabelLeftPixels");
				this.OnLabelLeftPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelHeightPixels", DbType="SmallInt NOT NULL")]
	public short LabelHeightPixels
	{
		get
		{
			return this._LabelHeightPixels;
		}
		set
		{
			if ((this._LabelHeightPixels != value))
			{
				this.OnLabelHeightPixelsChanging(value);
				this.SendPropertyChanging();
				this._LabelHeightPixels = value;
				this.SendPropertyChanged("LabelHeightPixels");
				this.OnLabelHeightPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelWidthPixels", DbType="SmallInt NOT NULL")]
	public short LabelWidthPixels
	{
		get
		{
			return this._LabelWidthPixels;
		}
		set
		{
			if ((this._LabelWidthPixels != value))
			{
				this.OnLabelWidthPixelsChanging(value);
				this.SendPropertyChanging();
				this._LabelWidthPixels = value;
				this.SendPropertyChanged("LabelWidthPixels");
				this.OnLabelWidthPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTopPixels", DbType="SmallInt NOT NULL")]
	public short ValueTopPixels
	{
		get
		{
			return this._ValueTopPixels;
		}
		set
		{
			if ((this._ValueTopPixels != value))
			{
				this.OnValueTopPixelsChanging(value);
				this.SendPropertyChanging();
				this._ValueTopPixels = value;
				this.SendPropertyChanged("ValueTopPixels");
				this.OnValueTopPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueLeftPixels", DbType="SmallInt NOT NULL")]
	public short ValueLeftPixels
	{
		get
		{
			return this._ValueLeftPixels;
		}
		set
		{
			if ((this._ValueLeftPixels != value))
			{
				this.OnValueLeftPixelsChanging(value);
				this.SendPropertyChanging();
				this._ValueLeftPixels = value;
				this.SendPropertyChanged("ValueLeftPixels");
				this.OnValueLeftPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueHeightPixels", DbType="SmallInt NOT NULL")]
	public short ValueHeightPixels
	{
		get
		{
			return this._ValueHeightPixels;
		}
		set
		{
			if ((this._ValueHeightPixels != value))
			{
				this.OnValueHeightPixelsChanging(value);
				this.SendPropertyChanging();
				this._ValueHeightPixels = value;
				this.SendPropertyChanged("ValueHeightPixels");
				this.OnValueHeightPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueWidthPixels", DbType="SmallInt NOT NULL")]
	public short ValueWidthPixels
	{
		get
		{
			return this._ValueWidthPixels;
		}
		set
		{
			if ((this._ValueWidthPixels != value))
			{
				this.OnValueWidthPixelsChanging(value);
				this.SendPropertyChanging();
				this._ValueWidthPixels = value;
				this.SendPropertyChanged("ValueWidthPixels");
				this.OnValueWidthPixelsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldValue", DbType="VarChar(MAX) NOT NULL")]
	public string FieldValue
	{
		get
		{
			return this._FieldValue;
		}
		set
		{
			if ((this._FieldValue != value))
			{
				this.OnFieldValueChanging(value);
				this.SendPropertyChanging();
				this._FieldValue = value;
				this.SendPropertyChanged("FieldValue");
				this.OnFieldValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="SmallDateTime NOT NULL")]
	public System.DateTime LastUpdated
	{
		get
		{
			return this._LastUpdated;
		}
		set
		{
			if ((this._LastUpdated != value))
			{
				this.OnLastUpdatedChanging(value);
				this.SendPropertyChanging();
				this._LastUpdated = value;
				this.SendPropertyChanged("LastUpdated");
				this.OnLastUpdatedChanged();
			}
		}
	}

	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_Abstract", Storage = "_Order", ThisKey = "OrderId", OtherKey = "Id", IsForeignKey = true)]
	public Order Order
	{
		get
		{
			return this._Order.Entity;
		}
		set
		{
			Order previousValue = this._Order.Entity;
			if (((previousValue != value) 
						|| (this._Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order.Entity = null;
					previousValue.Abstracts.Remove(this);
				}
				this._Order.Entity = value;
				if ((value != null))
				{
					value.Abstracts.Add(this);
					this._OrderId = value.Id;
				}
				else
				{
					this._OrderId = default(System.Guid);
				}
				this.SendPropertyChanged("Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Guid _OrderId;
	
	private int _Number;
	
	private decimal _Amount;
	
	private decimal _SearchFee;
	
	private decimal _CopyFee;
	
	private byte _PageCount;
	
	private System.DateTime _DateCreated;
	
	private System.Nullable<System.DateTime> _DateBilled;
	
	private System.Nullable<System.DateTime> _DatePaid;
	
	private System.Nullable<System.DateTime> _DateVoided;
	
	private EntityRef<Order> _Order;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnOrderIdChanging(System.Guid value);
    partial void OnOrderIdChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnSearchFeeChanging(decimal value);
    partial void OnSearchFeeChanged();
    partial void OnCopyFeeChanging(decimal value);
    partial void OnCopyFeeChanged();
    partial void OnPageCountChanging(byte value);
    partial void OnPageCountChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateBilledChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBilledChanged();
    partial void OnDatePaidChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePaidChanged();
    partial void OnDateVoidedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateVoidedChanged();
    #endregion
	
	public Invoice()
	{
		this._Order = default(EntityRef<Order>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid OrderId
	{
		get
		{
			return this._OrderId;
		}
		set
		{
			if ((this._OrderId != value))
			{
				if (this._Order.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnOrderIdChanging(value);
				this.SendPropertyChanging();
				this._OrderId = value;
				this.SendPropertyChanged("OrderId");
				this.OnOrderIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
	public int Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="SmallMoney NOT NULL")]
	public decimal Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchFee", DbType="SmallMoney NOT NULL")]
	public decimal SearchFee
	{
		get
		{
			return this._SearchFee;
		}
		set
		{
			if ((this._SearchFee != value))
			{
				this.OnSearchFeeChanging(value);
				this.SendPropertyChanging();
				this._SearchFee = value;
				this.SendPropertyChanged("SearchFee");
				this.OnSearchFeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CopyFee", DbType="SmallMoney NOT NULL")]
	public decimal CopyFee
	{
		get
		{
			return this._CopyFee;
		}
		set
		{
			if ((this._CopyFee != value))
			{
				this.OnCopyFeeChanging(value);
				this.SendPropertyChanging();
				this._CopyFee = value;
				this.SendPropertyChanged("CopyFee");
				this.OnCopyFeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageCount", DbType="TinyInt NOT NULL")]
	public byte PageCount
	{
		get
		{
			return this._PageCount;
		}
		set
		{
			if ((this._PageCount != value))
			{
				this.OnPageCountChanging(value);
				this.SendPropertyChanging();
				this._PageCount = value;
				this.SendPropertyChanged("PageCount");
				this.OnPageCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="SmallDateTime NOT NULL")]
	public System.DateTime DateCreated
	{
		get
		{
			return this._DateCreated;
		}
		set
		{
			if ((this._DateCreated != value))
			{
				this.OnDateCreatedChanging(value);
				this.SendPropertyChanging();
				this._DateCreated = value;
				this.SendPropertyChanged("DateCreated");
				this.OnDateCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBilled", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> DateBilled
	{
		get
		{
			return this._DateBilled;
		}
		set
		{
			if ((this._DateBilled != value))
			{
				this.OnDateBilledChanging(value);
				this.SendPropertyChanging();
				this._DateBilled = value;
				this.SendPropertyChanged("DateBilled");
				this.OnDateBilledChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePaid", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> DatePaid
	{
		get
		{
			return this._DatePaid;
		}
		set
		{
			if ((this._DatePaid != value))
			{
				this.OnDatePaidChanging(value);
				this.SendPropertyChanging();
				this._DatePaid = value;
				this.SendPropertyChanged("DatePaid");
				this.OnDatePaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateVoided", DbType="SmallDateTime")]
	public System.Nullable<System.DateTime> DateVoided
	{
		get
		{
			return this._DateVoided;
		}
		set
		{
			if ((this._DateVoided != value))
			{
				this.OnDateVoidedChanging(value);
				this.SendPropertyChanging();
				this._DateVoided = value;
				this.SendPropertyChanged("DateVoided");
				this.OnDateVoidedChanged();
			}
		}
	}

	[JsonIgnore]
	[ScriptIgnore]
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_Invoice", Storage = "_Order", ThisKey = "OrderId", OtherKey = "Id", IsForeignKey = true)]
	public Order Order
	{
		get
		{
			return this._Order.Entity;
		}
		set
		{
			Order previousValue = this._Order.Entity;
			if (((previousValue != value) 
						|| (this._Order.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Order.Entity = null;
					previousValue.Invoices.Remove(this);
				}
				this._Order.Entity = value;
				if ((value != null))
				{
					value.Invoices.Add(this);
					this._OrderId = value.Id;
				}
				else
				{
					this._OrderId = default(System.Guid);
				}
				this.SendPropertyChanged("Order");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
